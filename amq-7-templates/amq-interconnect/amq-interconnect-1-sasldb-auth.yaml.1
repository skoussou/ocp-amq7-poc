kind: Template
apiVersion: v1
metadata:
  name: amq-interconnect-1-sasl-auth
  annotations:
    description: Application template for Red Hat AMQ Interconnect Router
        with SASL authentication. This template requires a secret
        containing a list of user names and passwords against which clients will be authenticated, and a secret containing the certificates and key required for inter-router authentication and encryption.
    iconClass: icon-amq
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: messaging,amq
    openshift.io/display-name: Red Hat AMQ Interconnect Router 1.x with SASL
labels:
  template: amq-interconnect-1-sasl-auth
message: A new messaging service has been created in your project.
parameters:
- displayName: Application Name
  description: The name of the application.
  name: APPLICATION_NAME
  value: amq-interconnect
  required: true
- displayName: Router Internal Certificates
  description: The name of the secret that contains the certificate with which to authenticate inter-router connections.
  name: INTER_ROUTER_CERTS_SECRET
  value: inter-router-certs
- displayName: Secret for User Data
  description: The name of the secret that contains the list of user name/password pairs.
  name: USERS_SECRET
  value: users
- displayName: Image Stream Namespace
  description: The namespace in which the image streams for Red Hat Middleware images are
    installed. These image streams are normally installed in the openshift namespace.
    You should only need to modify this if you installed the image streams in a
    different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
- displayName: Image Name
  description: The name of the AMQ Interconnect image to use. This can usually be left as
               the default value
  name: IMAGE_NAME
  value: amq-interconnect:latest
- displayName: qdrouterd.conf
  description: The router configuration file.
  name: QDROUTERD_CONF
  value: |-
    router {
        mode: interior
        id: Router.${HOSTNAME}
        saslConfigDir: /etc/sasl2/
    }

    listener {
        host: 0.0.0.0
        port: amqp
        authenticatePeer: yes
    }

    # allow anonymous connections over localhost for more
    # convenient use of mgmt tools
    listener {
        host: localhost
        port: 5677
        authenticatePeer: no
        saslMechanisms: ANONYMOUS
    }

    listener {
        host: 0.0.0.0
        port: amqps
        sslProfile: service_tls
        authenticatePeer: yes
        requireSsl: true
    }

    listener {
        host: 0.0.0.0
        port: 55672
        role: inter-router
        sslProfile: inter_router_tls
        authenticatePeer: yes
        requireSsl: true
        saslMechanisms: EXTERNAL
    }

    sslProfile {
        name: inter_router_tls
        certFile: /etc/qpid-dispatch-certs/inter-router/tls.crt
        privateKeyFile: /etc/qpid-dispatch-certs/inter-router/tls.key
        caCertFile: /etc/qpid-dispatch-certs/inter-router/ca.crt
    }

    sslProfile {
        name: service_tls
        certFile: /etc/qpid-dispatch-certs/normal/tls.crt
        keyFile: /etc/qpid-dispatch-certs/normal/tls.key
    }

    listener {
        host: 0.0.0.0
        port: 8672
        authenticatePeer: yes
        sslProfile: service_tls
        http: true
        httpRootDir: /usr/share/qpid-dispatch/console
    }

    address {
        prefix: closest
        distribution: closest
    }

    address {
        prefix: multicast
        distribution: multicast
    }

    address {
        prefix: unicast
        distribution: closest
    }

    address {
        prefix: exclusive
        distribution: closest
    }

    address {
        prefix: broadcast
        distribution: multicast
    }

objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
    annotations:
      description: The router's AMQP port.
      service.alpha.openshift.io/serving-cert-secret-name: ${APPLICATION_NAME}-cert
  spec:
    ports:
    - port: 5672
      name: amqp
      targetPort: 5672
    - port: 5671
      name: amqps
      targetPort: 5671
    - port: 8672
      name: http
      targetPort: 8672
    - port: 55672
      name: inter-router
      targetPort: 55672
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      application: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        maxSurge: 0
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_STREAM_NAMESPACE}"
          name: ${IMAGE_NAME}
    - type: ConfigChange
    replicas: 2
    selector:
      deploymentConfig: "${APPLICATION_NAME}"
    template:
      metadata:
        name: "${APPLICATION_NAME}"
        labels:
          deploymentConfig: "${APPLICATION_NAME}"
          application: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: ${APPLICATION_NAME}
        terminationGracePeriodSeconds: 60
        containers:
        - name: "${APPLICATION_NAME}"
          ports:
          - name: amqp
            containerPort: 5672
            protocol: TCP
          - name: amqps
            containerPort: 5671
            protocol: TCP
          - name: http
            containerPort: 8672
            protocol: TCP
          - name: inter
            containerPort: 55672
            protocol: TCP
          env:
          - name: APPLICATION_NAME
            value: "${APPLICATION_NAME}"
          - name: QDROUTERD_CONF
            value: "/etc/qpid-dispatch/qdrouterd.conf"
          - name: QDROUTERD_AUTO_MESH_DISCOVERY
            value: "QUERY"
          - name: QDROUTERD_AUTO_CREATE_SASLDB_SOURCE
            value: "/etc/qpid-dispatch-users"
          - name: QDROUTERD_AUTO_CREATE_SASLDB_PATH
            value: "/opt/interconnect/etc/qdrouterd.sasldb"
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
            image: ${IMAGE_NAME}
          volumeMounts:
          - name: certs
            readOnly: true
            mountPath: /etc/qpid-dispatch-certs/normal/
          - name: inter-router-certs
            readOnly: true
            mountPath: /etc/qpid-dispatch-certs/inter-router/
          - name: config-volume
            mountPath: /etc/qpid-dispatch/
          - name: sasl-config
            mountPath: /etc/sasl2/
          - name: users
            mountPath: /etc/qpid-dispatch-users
          terminationGracePeriodSeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: 8672
          livenessProbe:
            httpGet:
              path: /
              port: 8672
        volumes:
        - name: certs
          secret:
            secretName: ${APPLICATION_NAME}-cert
        - name: inter-router-certs
          secret:
            secretName: ${INTER_ROUTER_CERTS_SECRET}
        - name: config-volume
          configMap:
            name: ${APPLICATION_NAME}
        - name: sasl-config
          configMap:
            name: ${APPLICATION_NAME}-sasl-config
        - name: users
          secret:
            secretName: ${USERS_SECRET}
        imagePullPolicy: Always
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: "${APPLICATION_NAME}"
- kind: RoleBinding
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-view
    labels:
      application: "${APPLICATION_NAME}"
  subjects:
  - kind: ServiceAccount
    name: ${APPLICATION_NAME}
  roleRef:
    name: "view"
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
  data:
    qdrouterd.conf: ${QDROUTERD_CONF}
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-sasl-config
    labels:
      application: ${APPLICATION_NAME}
  data:
    qdrouterd.conf: |-
      pwcheck_method: auxprop
      auxprop_plugin: sasldb
      sasldb_path: /opt/interconnect/etc/qdrouterd.sasldb
      mech_list: SCRAM-SHA-1 DIGEST-MD5 PLAIN EXTERNAL
